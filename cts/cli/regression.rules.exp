Created new pacemaker configuration
Setting up shadow instance
A new shadow instance was created.  To begin using it paste the following into your shell:
  CIB_shadow=cts-cli ; export CIB_shadow
=#=#=#= Begin test: crm_rule given no arguments =#=#=#=
crm_rule: No mode operation given
=#=#=#= End test: crm_rule given no arguments - Incorrect usage (64) =#=#=#=
* Passed: crm_rule       - crm_rule given no arguments
=#=#=#= Begin test: crm_rule given no rule to check =#=#=#=
crm_rule: --check requires use of --rule=
=#=#=#= End test: crm_rule given no rule to check - Incorrect usage (64) =#=#=#=
* Passed: crm_rule       - crm_rule given no rule to check
=#=#=#= Begin test: crm_rule given invalid input XML =#=#=#=
(log_xmllib_err@xml.c:891) 	error: XML Error: Entity: line 1: parser error : Start tag expected, '<' not found
(log_xmllib_err@xml.c:891) 	error: XML Error: invalidxml
(log_xmllib_err@xml.c:891) 	error: XML Error: ^
crm_rule: Couldn't parse input string: invalidxml

=#=#=#= End test: crm_rule given invalid input XML - Invalid data given (65) =#=#=#=
* Passed: crm_rule       - crm_rule given invalid input XML
=#=#=#= Begin test: crm_rule given invalid input XML on stdin =#=#=#=
(log_xmllib_err@xml.c:891) 	error: XML Error: Entity: line 1: parser error : Start tag expected, '<' not found
(log_xmllib_err@xml.c:891) 	error: XML Error: invalidxml
(log_xmllib_err@xml.c:891) 	error: XML Error: ^
crm_rule: Couldn't parse input from STDIN

=#=#=#= End test: crm_rule given invalid input XML on stdin - Invalid data given (65) =#=#=#=
* Passed: echo           - crm_rule given invalid input XML on stdin
=#=#=#= Begin test: Try to check a rule that doesn't exist =#=#=#=
No rule found with ID=blahblah
=#=#=#= Current cib after: Try to check a rule that doesn't exist =#=#=#=
<cib epoch="10" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-stonith-enabled" name="stonith-enabled" value="false"/>
      </cluster_property_set>
    </crm_config>
    <nodes/>
    <resources>
      <primitive class="ocf" id="dummy" provider="heartbeat" type="Dummy"/>
    </resources>
    <constraints>
      <rsc_location id="cli-too-many-date-expressions" rsc="dummy">
        <rule id="cli-rule-too-many-date-expressions" score="INFINITY" boolean-op="or">
          <date_expression id="cli-date-expression-1" operation="gt" start=""/>
          <date_expression id="cli-date-expression-2" operation="lt" end=""/>
        </rule>
      </rsc_location>
      <rsc_location id="cli-prefer-dummy-expired" rsc="dummy">
        <rule id="cli-prefer-rule-dummy-expired" score="INFINITY">
          <date_expression id="cli-prefer-lifetime-end-dummy-expired" operation="lt" end=""/>
        </rule>
      </rsc_location>
      <rsc_location id="cli-prefer-dummy-not-yet" rsc="dummy">
        <rule id="cli-prefer-rule-dummy-not-yet" score="INFINITY">
          <date_expression id="cli-prefer-lifetime-end-dummy-not-yet" operation="gt" start=""/>
        </rule>
      </rsc_location>
      <rsc_location id="cli-prefer-dummy-date_spec-only-years" rsc="dummy">
        <rule id="cli-prefer-rule-dummy-date_spec-only-years" score="INFINITY">
          <date_expression id="cli-prefer-dummy-date_spec-only-years-expr" operation="date_spec">
            <date_spec id="cli-prefer-dummy-date_spec-only-years-spec" years="2019"/>
          </date_expression>
        </rule>
      </rsc_location>
      <rsc_location id="cli-prefer-dummy-date_spec-without-years" rsc="dummy">
        <rule id="cli-prefer-rule-dummy-date_spec-without-years" score="INFINITY">
          <date_expression id="cli-prefer-dummy-date_spec-without-years-expr" operation="date_spec">
            <date_spec id="cli-prefer-dummy-date_spec-without-years-spec" hours="20" months="1,3,5,7"/>
          </date_expression>
        </rule>
      </rsc_location>
      <rsc_location id="cli-prefer-dummy-date_spec-years-moon" rsc="dummy">
        <rule id="cli-prefer-rule-dummy-date_spec-years-moon" score="INFINITY">
          <date_expression id="cli-prefer-dummy-date_spec-years-moon-expr" operation="date_spec">
            <date_spec id="cli-prefer-dummy-date_spec-years-moon-spec" years="2019" moon="1"/>
          </date_expression>
        </rule>
      </rsc_location>
      <rsc_location id="cli-no-date_expression" rsc="dummy">
        <rule id="cli-no-date_expression-rule" score="INFINITY">
          <expression id="ban-apache-expr" attribute="#uname" operation="eq" value="node3"/>
        </rule>
      </rsc_location>
    </constraints>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Try to check a rule that doesn't exist - No such object (105) =#=#=#=
* Passed: crm_rule       - Try to check a rule that doesn't exist
=#=#=#= Begin test: Try to check a rule that doesn't exist, with XML output =#=#=#=
<pacemaker-result api-version="X" request="crm_rule -c -r blahblah --output-as=xml">
  <status code="105" message="No such object">
    <errors>
      <error>No rule found with ID=blahblah</error>
    </errors>
  </status>
</pacemaker-result>
=#=#=#= End test: Try to check a rule that doesn't exist, with XML output - No such object (105) =#=#=#=
* Passed: crm_rule       - Try to check a rule that doesn't exist, with XML output
=#=#=#= Begin test: Try to check a rule that has too many date_expressions =#=#=#=
Can't check rule cli-rule-too-many-date-expressions because it does not have exactly one date_expression
=#=#=#= End test: Try to check a rule that has too many date_expressions - Unimplemented (3) =#=#=#=
* Passed: crm_rule       - Try to check a rule that has too many date_expressions
=#=#=#= Begin test: Verify basic rule is expired =#=#=#=
Rule cli-prefer-rule-dummy-expired is expired
=#=#=#= End test: Verify basic rule is expired - Requested item has expired (110) =#=#=#=
* Passed: crm_rule       - Verify basic rule is expired
=#=#=#= Begin test: Verify basic rule is expired, with XML output =#=#=#=
<pacemaker-result api-version="X" request="crm_rule -c -r cli-prefer-rule-dummy-expired --output-as=xml">
  <rule-check rule-id="cli-prefer-rule-dummy-expired" rc="110"/>
  <status code="110" message="Requested item has expired"/>
</pacemaker-result>
=#=#=#= End test: Verify basic rule is expired, with XML output - Requested item has expired (110) =#=#=#=
* Passed: crm_rule       - Verify basic rule is expired, with XML output
=#=#=#= Begin test: Verify basic rule worked in the past =#=#=#=
Rule cli-prefer-rule-dummy-expired is still in effect
=#=#=#= End test: Verify basic rule worked in the past - OK (0) =#=#=#=
* Passed: crm_rule       - Verify basic rule worked in the past
=#=#=#= Begin test: Verify basic rule is not yet in effect =#=#=#=
Rule cli-prefer-rule-dummy-not-yet has not yet taken effect
=#=#=#= End test: Verify basic rule is not yet in effect - Requested item is not yet in effect (111) =#=#=#=
* Passed: crm_rule       - Verify basic rule is not yet in effect
=#=#=#= Begin test: Verify date_spec rule with years has expired =#=#=#=
Rule cli-prefer-rule-dummy-date_spec-only-years is expired
=#=#=#= End test: Verify date_spec rule with years has expired - Requested item has expired (110) =#=#=#=
* Passed: crm_rule       - Verify date_spec rule with years has expired
=#=#=#= Begin test: Verify multiple rules at once =#=#=#=
Rule cli-prefer-rule-dummy-not-yet has not yet taken effect
Rule cli-prefer-rule-dummy-date_spec-only-years is expired
=#=#=#= End test: Verify multiple rules at once - Requested item has expired (110) =#=#=#=
* Passed: crm_rule       - Verify multiple rules at once
=#=#=#= Begin test: Verify multiple rules at once, with XML output =#=#=#=
<pacemaker-result api-version="X" request="crm_rule -c -r cli-prefer-rule-dummy-not-yet -r cli-prefer-rule-dummy-date_spec-only-years --output-as=xml">
  <rule-check rule-id="cli-prefer-rule-dummy-not-yet" rc="111"/>
  <rule-check rule-id="cli-prefer-rule-dummy-date_spec-only-years" rc="110"/>
  <status code="110" message="Requested item has expired"/>
</pacemaker-result>
=#=#=#= End test: Verify multiple rules at once, with XML output - Requested item has expired (110) =#=#=#=
* Passed: crm_rule       - Verify multiple rules at once, with XML output
=#=#=#= Begin test: Verify date_spec rule with years is in effect =#=#=#=
Rule cli-prefer-rule-dummy-date_spec-only-years satisfies conditions
=#=#=#= End test: Verify date_spec rule with years is in effect - OK (0) =#=#=#=
* Passed: crm_rule       - Verify date_spec rule with years is in effect
=#=#=#= Begin test: Try to check a rule whose date_spec does not contain years= =#=#=#=
Rule cli-prefer-rule-dummy-date_spec-without-years must either not use date_spec, or use date_spec with years= but not moon=
=#=#=#= End test: Try to check a rule whose date_spec does not contain years= - No such object (105) =#=#=#=
* Passed: crm_rule       - Try to check a rule whose date_spec does not contain years=
=#=#=#= Begin test: Try to check a rule whose date_spec contains years= and moon= =#=#=#=
Rule cli-prefer-rule-dummy-date_spec-years-moon must either not use date_spec, or use date_spec with years= but not moon=
=#=#=#= End test: Try to check a rule whose date_spec contains years= and moon= - No such object (105) =#=#=#=
* Passed: crm_rule       - Try to check a rule whose date_spec contains years= and moon=
=#=#=#= Begin test: Try to check a rule with no date_expression =#=#=#=
Can't check rule cli-no-date_expression-rule because it does not have exactly one date_expression
=#=#=#= End test: Try to check a rule with no date_expression - Unimplemented (3) =#=#=#=
* Passed: crm_rule       - Try to check a rule with no date_expression
